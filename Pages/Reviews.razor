@page "/readreviews"

@using TC_CS03_Blazor.Data
@inject ReviewService ReviewService

<AuthorizeView>
    <NotAuthorized>
        <a href="Identity/Account/Login">Please log in</a>
    </NotAuthorized>
    <Authorized Context="AuthorizedContext">
        <h1>Reviews</h1>
        @if (reviews == null)
        {
            <p>
                <em>Loading...</em>
            </p>
        }
        else
        {
            <div class="container">
                <button class="btn btn-outline-primary" @onclick="ShowModalAddReview">Add Review</button>
                <table class="table table-hover">
                    <thead class="thead-light">
                        <tr>
                            <th>Review Rating</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var r in reviews)
                        {
                            <tr @onclick="(() => ShowModalSingleReview(r.REVIEW_ID))">
                                <td>@r.REVIEW_RATING_TYPE_ETXT</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </Authorized>
</AuthorizeView>

@if (isShowModalAddReview)
{
    @if (ReviewRatingTypes == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header bg-primary text-white">
                        <h3 class="modal-title">Review Details</h3>
                        <button type="button" class="close text-white" @onclick="HideModalAddReview">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="@addReview" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />

                            <div class="form-group row">
                                <label for="rating" class="col-sm-2 col-form-label text-sm-right">Rating: </label>
                                <div class="col-sm-6">
                                    <InputSelect id="REVIEW_RATING_TYPE_CD" class="form-control" @bind-Value="addReview.REVIEW_RATING_TYPE_CD">
                                        <option value="">-- Select Rating (Required) --</option>
                                        @foreach (var item in ReviewRatingTypes)
                                                {
                                            <option value="@item.REVIEW_RATING_TYPE_CD">@item.REVIEW_RATING_TYPE_ETXT</option>
                                                }
                                        /**/
                                    </InputSelect>
                                </div>
                                <div class="col-sm-4">
                                    <ValidationMessage For="@(() => addReview.REVIEW_RATING_TYPE_CD)" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="comments" class="col-sm-2 col-form-label text-sm-right">Comments: </label>
                                <div class="col-sm-6">
                                    <InputTextArea id="COMMENTS_TXT" class="form-control" title="Please share your thoughts" placeholder="Comments (optional)" @bind-Value="addReview.COMMENTS_TXT" />
                                </div>
                                <div class="col-sm-4">
                                    <ValidationMessage For="@(() => addReview.COMMENTS_TXT)" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2" />
                                <div class="col-sm-6">
                                    <button type="submit" class="btn btn-primary form-control">Submit Review</button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }
}

@if (isShowModalViewReview)
{
    <!-- This is the popup to show the Review's Rating and Comments -->
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-info text-white">
                    <h3 class="modal-title">@selectedReview.REVIEW_RATING_TYPE_ETXT</h3>
                    <button type="button" class="close text-white" @onclick="HideModalSingleReview">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="white-space: pre-line;word-wrap:break-word">
                    <p>@selectedReview.COMMENTS_TXT</p>
                </div>
            </div>
        </div>
    </div>
}

@if (isShowModalSuccess)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h3 class="modal-title">@successHeader</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close text-white" @onclick="HideModalSuccess">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@successMessage</p>
                </div>
            </div>
        </div>
    </div>
}

@if (isShowModalFail)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h3 class="modal-title">@failHeader</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close text-white" @onclick="HideModalFail">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@failMessage</p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private IReadOnlyCollection<Review> reviews;
    private IReadOnlyCollection<ReviewRating> ReviewRatingTypes;

    private Review addReview = new Review();
    private Review selectedReview = new Review();

    private bool isShowModalAddReview = false;
    private bool isShowModalViewReview = false;
    private bool isShowModalSuccess = false;
    private bool isShowModalFail = false;

    private string successHeader;
    private string successMessage;
    private string failHeader;
    private string failMessage;

    protected override async Task OnInitializedAsync()
    {

        await LoadTableReviews();
    }

    protected async Task LoadTableReviews()
    {
        reviews = await ReviewService.GetReviewsAsync();
    }

    protected async Task HandleValidSubmit()
    {
        HttpResponseMessage x = await ReviewService.InsertReviewAsync(addReview);
        if (x.IsSuccessStatusCode)
        {
            await LoadTableReviews(); //refresh grid
            HideModalAddReview();
            ShowModalSuccess("Submission Received", "Thank you for your review.");
        }
        else
        {
            ShowModalFail("Error Submitting Review", x.ReasonPhrase);
        };
    }

    protected async Task ShowModalAddReview()
    {
        // Load drop down list if it hasn't been loaded yet
        if (ReviewRatingTypes == null)
        {
            ReviewRatingTypes = await ReviewService.GetReviewRatingTypesAsync(); // Load Ratings dropdown list
        }

        addReview = new Review(); // so that a clean form is shown each time

        isShowModalAddReview = true;
    }

    protected void HideModalAddReview()
    {
        isShowModalAddReview = false;
    }

    protected async Task ShowModalSingleReview(long id)
    {
        selectedReview = await ReviewService.GetReviewByIdAsync(id);

        isShowModalViewReview = true;
    }

    protected void HideModalSingleReview()
    {
        isShowModalViewReview = false;
    }

    protected void ShowModalSuccess(string header, string message)
    {
        successHeader = header;
        successMessage = message;

        isShowModalSuccess = true;
    }

    protected void HideModalSuccess()
    {
        isShowModalSuccess = false;
    }

    protected void ShowModalFail(string header, string message)
    {
        failHeader = header;
        failMessage = message;

        isShowModalFail = true;
    }

    protected void HideModalFail()
    {
        isShowModalFail = false;
    }

}
